name: Fly Deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  build-and-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    concurrency: deploy-group

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}

      - name: Convert repository name to lowercase
        id: lowercase
        run: |
            echo "::set-output name=repo::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')"
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
            context: ./backend
            push: true
            tags: ghcr.io/${{ steps.lowercase.outputs.repo }}:latest
  
      - name: Expose image URL
        run: |
         echo "Image URL: ghcr.io/${{ steps.lowercase.outputs.repo }}:latest"
  
      - name: Set up environment variables
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: ${{ secrets.DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DB_PORT: ${{ secrets.DB_PORT }}
          PORT: ${{ secrets.PORT }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        run: |
          echo "Environment variables are set."

      - name: Deploy to Fly
        uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: latest
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Authenticate with Fly
        run: flyctl auth login "${{ secrets.FLY_API_TOKEN }}"
      
      - name: Get Fly App URL
        run: |
          flyctl status --app woudouma | grep "Hostname" | awk '{print $2}'
        id: get-app-url  
      
      - name: Expose Fly App URL
        run: |
          echo "Fly App URL: https://${{ steps.get-app-url.outputs.hostname }}"
